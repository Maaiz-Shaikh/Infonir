<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="DELETE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function () {
   /* widget controller */
   var c = this;
   var selectElement = document.getElementById('release');

   // Function to handle the button click event
   c.showTeamModal = function () {
      var selectedRelease = selectElement.value;

      // Add logic to pass the selected release to the server script
      c.server.getTeamMembers(selectedRelease).then(function (response) {
         // Handle the response and display the team members using a modal
         // You can use the $spModal service to create and show a modal
         // Example: $spModal.open({ title: 'Team Members', message: response.teamMembers });
      });
   };

   // Populate the release dropdown
   var release = c.data.release;
   for (var i = 0; i < release.length; i++) {
      var option = document.createElement("option");
      option.text = release[i];
      selectElement.add(option);
   }
};
]]></client_script>
        <controller_as>c</controller_as>
        <css>body {
    font-family: Arial, sans-serif;
  }
  h2 {
    color: #333;
  }
  select {
    width: 200px;
    padding: 10px;
    font-size: 16px;
    border: none;
    background-color: #20d900;
    color: white;
    border-radius: 5px;
  }
  option {
    background-color: white;
    color: black;
  }
  p {
    margin-top: 20px;
  }</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>release_sel_mit</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>release sel mit</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function () {
   /* populate the 'data' object */
   /* e.g., data.table = $sp.getValue('table'); */
   data.release = [];

   // Get the "product" parameter from the URL
   var productName = $sp.getParameter('product');
   productName = productName.toLowerCase();
   productName = productName.replace(/\s/g, '');
   console.log(productName);

   // Query the referenced table to get the sys_id of the referenced record based on the product name
   var productGr = new GlideRecord('x_1312444_infonir_product_table');
   productGr.addQuery('product_name', productName);
   productGr.query();

   if (productGr.next()) {
      var productSysId = productGr.getValue('sys_id');

      // Query records based on the product reference field
      var releases = new GlideRecord('x_1312444_infonir_release_table');
      releases.addQuery('u_product', productSysId);
      releases.query();

      while (releases.next()) {
         data.release.push(releases.getValue('u_release_name'));
      }
   }

   // Function to retrieve team members based on the selected release
   data.getTeamMembers = function (selectedRelease) {
      var teamMembers = [];

      // Add logic to query team members based on the selected release
      // Populate the 'teamMembers' array with the retrieved data

      return {
         teamMembers: teamMembers
      };
   };
})();
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>mit</sys_created_by>
        <sys_created_on>2024-02-12 09:39:14</sys_created_on>
        <sys_id>dbe37539475c0210ef1113ff016d431e</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>release sel mit</sys_name>
        <sys_package display_value="Infonir" source="x_1312444_infonir">a63c0f0c47100210ef1113ff016d43c8</sys_package>
        <sys_policy/>
        <sys_scope display_value="Infonir">a63c0f0c47100210ef1113ff016d43c8</sys_scope>
        <sys_update_name>sp_widget_dbe37539475c0210ef1113ff016d431e</sys_update_name>
        <sys_updated_by>mit</sys_updated_by>
        <sys_updated_on>2024-02-12 09:40:21</sys_updated_on>
        <template><![CDATA[<div>
   <!-- your widget template -->
   <select id="release" name='release' ng-model='c.release'></select>

   <!-- Button to show team members -->
   <button ng-click='c.showTeamModal()'>Show Team</button>
</div>
]]></template>
    </sp_widget>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="Infonir">a63c0f0c47100210ef1113ff016d43c8</application>
        <file_path/>
        <instance_id>fb841c611b56fd9c32182f8dee4bcb5b</instance_id>
        <instance_name>dev203003</instance_name>
        <name>sp_widget_dbe37539475c0210ef1113ff016d431e</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;custom&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[api.controller = function () {
   /* widget controller */
   var c = this;
   var selectElement = document.getElementById('release');

   // Function to handle the button click event
   c.showTeamModal = function () {
      var selectedRelease = selectElement.value;

      // Add logic to pass the selected release to the server script
      c.server.getTeamMembers(selectedRelease).then(function (response) {
         // Handle the response and display the team members using a modal
         // You can use the $spModal service to create and show a modal
         // Example: $spModal.open({ title: 'Team Members', message: response.teamMembers });
      });
   };

   // Populate the release dropdown
   var release = c.data.release;
   for (var i = 0; i &lt; release.length; i++) {
      var option = document.createElement("option");
      option.text = release[i];
      selectElement.add(option);
   }
};
]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;body {
    font-family: Arial, sans-serif;
  }
  h2 {
    color: #333;
  }
  select {
    width: 200px;
    padding: 10px;
    font-size: 16px;
    border: none;
    background-color: #20d900;
    color: white;
    border-radius: 5px;
  }
  option {
    background-color: white;
    color: black;
  }
  p {
    margin-top: 20px;
  }&lt;/css&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;true&lt;/has_preview&gt;&lt;id&gt;release_sel_mit&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link(scope, element, attrs, controller) {  }]]&gt;&lt;/link&gt;&lt;name&gt;release sel mit&lt;/name&gt;&lt;option_schema/&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function () {
   /* populate the 'data' object */
   /* e.g., data.table = $sp.getValue('table'); */
   data.release = [];

   // Get the "product" parameter from the URL
   var productName = $sp.getParameter('product');
   productName = productName.toLowerCase();
   productName = productName.replace(/\s/g, '');
   console.log(productName);

   // Query the referenced table to get the sys_id of the referenced record based on the product name
   var productGr = new GlideRecord('x_1312444_infonir_product_table');
   productGr.addQuery('product_name', productName);
   productGr.query();

   if (productGr.next()) {
      var productSysId = productGr.getValue('sys_id');

      // Query records based on the product reference field
      var releases = new GlideRecord('x_1312444_infonir_release_table');
      releases.addQuery('u_product', productSysId);
      releases.query();

      while (releases.next()) {
         data.release.push(releases.getValue('u_release_name'));
      }
   }

   // Function to retrieve team members based on the selected release
   data.getTeamMembers = function (selectedRelease) {
      var teamMembers = [];

      // Add logic to query team members based on the selected release
      // Populate the 'teamMembers' array with the retrieved data

      return {
         teamMembers: teamMembers
      };
   };
})();
]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;mit&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2024-02-12 09:39:14&lt;/sys_created_on&gt;&lt;sys_id&gt;dbe37539475c0210ef1113ff016d431e&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_name&gt;release sel mit&lt;/sys_name&gt;&lt;sys_package display_value="Infonir" source="x_1312444_infonir"&gt;a63c0f0c47100210ef1113ff016d43c8&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Infonir"&gt;a63c0f0c47100210ef1113ff016d43c8&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_dbe37539475c0210ef1113ff016d431e&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;mit&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2024-02-12 09:40:21&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div&gt;
   &lt;!-- your widget template --&gt;
   &lt;select id="release" name='release' ng-model='c.release'&gt;&lt;/select&gt;

   &lt;!-- Button to show team members --&gt;
   &lt;button ng-click='c.showTeamModal()'&gt;Show Team&lt;/button&gt;
&lt;/div&gt;
]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
        <payload_hash>-1295540304</payload_hash>
        <record_name>release sel mit</record_name>
        <reverted_from/>
        <source>e8b8b07947580210ef1113ff016d4304</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>mit</sys_created_by>
        <sys_created_on>2024-02-12 09:40:22</sys_created_on>
        <sys_id>bf24bd39475c0210ef1113ff016d43d5</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>18d9cb063780000001</sys_recorded_at>
        <sys_updated_by>mit</sys_updated_by>
        <sys_updated_on>2024-02-12 09:40:22</sys_updated_on>
        <type>Widget</type>
        <update_guid>b724bd39d75c0210030a59e0a7831bd5</update_guid>
        <update_guid_history>b724bd39d75c0210030a59e0a7831bd5:-1295540304,13e3bd39175c0210eaa3087eb6cd78cb:-1886946743</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete display_value="release sel mit">fe015206479c4210ef1113ff016d4308</sys_audit_delete>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>mit</sys_created_by>
        <sys_created_on>2024-02-13 06:24:57</sys_created_on>
        <sys_db_object display_value="" name="sp_widget">sp_widget</sys_db_object>
        <sys_id>9d000109709843e8b7bd8fabc5896440</sys_id>
        <sys_metadata>dbe37539475c0210ef1113ff016d431e</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>release sel mit</sys_name>
        <sys_package display_value="Infonir" source="x_1312444_infonir">a63c0f0c47100210ef1113ff016d43c8</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_scope display_value="Infonir">a63c0f0c47100210ef1113ff016d43c8</sys_scope>
        <sys_scope_delete display_value="">09a65fa9b63f4fc083f5a68abded8e81</sys_scope_delete>
        <sys_update_name>sp_widget_dbe37539475c0210ef1113ff016d431e</sys_update_name>
        <sys_update_version display_value="sp_widget_dbe37539475c0210ef1113ff016d431e">bf24bd39475c0210ef1113ff016d43d5</sys_update_version>
        <sys_updated_by>mit</sys_updated_by>
        <sys_updated_on>2024-02-13 06:24:57</sys_updated_on>
    </sys_metadata_delete>
</record_update>
